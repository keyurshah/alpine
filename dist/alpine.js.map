{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/on.js","../src/directives/model.js","../src/component.js","../src/directives/show.js","../src/directives/if.js","../src/index.js"],"sourcesContent":["\r\n// Thanks @stimulus:\r\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\r\nexport function domReady() {\r\n    return new Promise(resolve => {\r\n        if (document.readyState == \"loading\") {\r\n            document.addEventListener(\"DOMContentLoaded\", resolve)\r\n        } else {\r\n            resolve()\r\n        }\r\n    })\r\n}\r\n\r\nexport function arrayUnique(array) {\r\n    var a = array.concat();\r\n    for(var i=0; i<a.length; ++i) {\r\n        for(var j=i+1; j<a.length; ++j) {\r\n            if(a[i] === a[j])\r\n                a.splice(j--, 1);\r\n        }\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\nexport function isTesting() {\r\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\r\n        || navigator.userAgent.includes(\"jsdom\")\r\n}\r\n\r\nexport function kebabCase(subject) {\r\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\r\n}\r\n\r\nexport function walk(el, callback) {\r\n    if (callback(el) === false) return\r\n\r\n    let node = el.firstElementChild\r\n\r\n    while (node) {\r\n        walk(node, callback)\r\n\r\n        node = node.nextElementSibling\r\n    }\r\n}\r\n\r\nexport function debounce(func, wait) {\r\n    var timeout\r\n    return function () {\r\n        var context = this, args = arguments\r\n        var later = function () {\r\n            timeout = null\r\n            func.apply(context, args)\r\n        }\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(later, wait)\r\n    }\r\n}\r\n\r\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function isXAttr(attr) {\r\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/\r\n\r\n    return xAttrRE.test(name)\r\n}\r\n\r\nexport function getXAttrs(el, type) {\r\n    return Array.from(el.attributes)\r\n        .filter(isXAttr)\r\n        .map(attr => {\r\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/)\r\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\r\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\r\n\r\n            return {\r\n                type: typeMatch ? typeMatch[1] : null,\r\n                value: valueMatch ? valueMatch[1] : null,\r\n                modifiers: modifiers.map(i => i.replace('.', '')),\r\n                expression: attr.value,\r\n            }\r\n        })\r\n        .filter(i => {\r\n            // If no type is passed in for filtering, bypass filter\r\n            if (! type) return true\r\n\r\n            return i.type === type\r\n        })\r\n}\r\n\r\nexport function replaceAtAndColonWithStandardSyntax(name) {\r\n    if (name.startsWith('@')) {\r\n        return name.replace('@', 'x-on:')\r\n    } else if (name.startsWith(':')) {\r\n        return name.replace(':', 'x-bind:')\r\n    }\r\n\r\n    return name\r\n}\r\n\r\nexport function transitionIn(el, show, forceSkip = false) {\r\n    // We don't want to transition on the initial page load.\r\n    if (forceSkip) return show()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n    const showAttr = getXAttrs(el, 'show')[0]\r\n\r\n    // If this is triggered by a x-show.transition.\r\n    if (showAttr && showAttr.modifiers.includes('transition')) {\r\n        let modifiers = showAttr.modifiers\r\n\r\n        // If x-show.transition.out, we'll skip the \"in\" transition.\r\n        if (modifiers.includes('out') && ! modifiers.includes('in')) return show()\r\n\r\n        const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out')\r\n\r\n        // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\r\n        modifiers = settingBothSidesOfTransition\r\n            ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers\r\n\r\n        transitionHelperIn(el, modifiers, show)\r\n    // Otherwise, we can assume x-transition:enter.\r\n    } else if (attrs.length > 0) {\r\n        transitionClassesIn(el, attrs, show)\r\n    } else {\r\n    // If neither, just show that damn thing.\r\n        show()\r\n    }\r\n}\r\n\r\nexport function transitionOut(el, hide, forceSkip = false) {\r\n    if (forceSkip) return hide()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n    const showAttr = getXAttrs(el, 'show')[0]\r\n\r\n    if (showAttr && showAttr.modifiers.includes('transition')) {\r\n        let modifiers = showAttr.modifiers\r\n\r\n        if (modifiers.includes('in') && ! modifiers.includes('out')) return hide()\r\n\r\n        const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out')\r\n\r\n        modifiers = settingBothSidesOfTransition\r\n            ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers\r\n\r\n        transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide)\r\n    } else if (attrs.length > 0) {\r\n        transitionClassesOut(el, attrs, hide)\r\n    } else {\r\n        hide()\r\n    }\r\n}\r\n\r\nexport function transitionHelperIn(el, modifiers, showCallback) {\r\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\r\n    const styleValues = {\r\n        duration: modifierValue(modifiers, 'duration', 150),\r\n        origin: modifierValue(modifiers, 'origin', 'center'),\r\n        first: {\r\n            opacity: 0,\r\n            scale: modifierValue(modifiers, 'scale', 95),\r\n        },\r\n        second: {\r\n            opacity: 1,\r\n            scale: 100,\r\n        },\r\n    }\r\n\r\n    transitionHelper(el, modifiers, showCallback, () => {}, styleValues)\r\n}\r\n\r\nexport function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback) {\r\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\r\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\r\n    // use that.\r\n    const duration = settingBothSidesOfTransition\r\n        ? modifierValue(modifiers, 'duration', 150)\r\n        : modifierValue(modifiers, 'duration', 150) / 2\r\n\r\n    const styleValues = {\r\n        duration: duration,\r\n        origin: modifierValue(modifiers, 'origin', 'center'),\r\n        first: {\r\n            opacity: 1,\r\n            scale: 100,\r\n        },\r\n        second: {\r\n            opacity: 0,\r\n            scale: modifierValue(modifiers, 'scale', 95),\r\n        },\r\n    }\r\n\r\n    transitionHelper(el, modifiers, () => {}, hideCallback, styleValues)\r\n}\r\n\r\nfunction modifierValue(modifiers, key, fallback) {\r\n    // If the the modifier isn't present, use the default.\r\n    if (modifiers.indexOf(key) === -1) return fallback\r\n\r\n    // If it IS present, grab the value after it: x-show.transition.duration.500ms\r\n    const rawValue = modifiers[modifiers.indexOf(key) + 1]\r\n\r\n    if (! rawValue) return fallback\r\n\r\n    if (key === 'scale') {\r\n        // Check if the very next value is NOT a number and return the fallback.\r\n        // If x-show.transition.scale, we'll use the default scale value.\r\n        // That is how a user opts out of the opacity transition.\r\n        if (! isNumeric(rawValue)) return fallback\r\n    }\r\n\r\n    if (key === 'duration') {\r\n        // Support x-show.transition.duration.500ms && duration.500\r\n        let match = rawValue.match(/([0-9]+)ms/)\r\n        if (match) return match[1]\r\n    }\r\n\r\n    if (key === 'origin') {\r\n        // Support chaining origin directions: x-show.transition.top.right\r\n        if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\r\n            return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ')\r\n        }\r\n    }\r\n\r\n    return rawValue\r\n}\r\n\r\nexport function transitionHelper(el, modifiers, hook1, hook2, styleValues) {\r\n    // If the user set these style values, we'll put them back when we're done with them.\r\n    const opacityCache = el.style.opacity\r\n    const transformCache = el.style.transform\r\n    const transformOriginCache = el.style.transformOrigin\r\n\r\n    // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\r\n    const noModifiers = ! modifiers.includes('opacity') && ! modifiers.includes('scale')\r\n    const transitionOpacity = noModifiers || modifiers.includes('opacity')\r\n    const transitionScale = noModifiers || modifiers.includes('scale')\r\n\r\n    // These are the explicit stages of a transition (same stages for in and for out).\r\n    // This way you can get a birds eye view of the hooks, and the differences\r\n    // between them.\r\n    const stages = {\r\n        start() {\r\n            if (transitionOpacity) el.style.opacity = styleValues.first.opacity\r\n            if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`\r\n        },\r\n        during() {\r\n            if (transitionScale) el.style.transformOrigin = styleValues.origin\r\n            el.style.transitionProperty = [(transitionOpacity ? `opacity` : ``), (transitionScale ? `transform` : ``)].join(' ').trim()\r\n            el.style.transitionDuration = `${styleValues.duration / 1000}s`\r\n            el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`\r\n        },\r\n        show() {\r\n            hook1()\r\n        },\r\n        end() {\r\n            if (transitionOpacity) el.style.opacity = styleValues.second.opacity\r\n            if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`\r\n        },\r\n        hide() {\r\n            hook2()\r\n        },\r\n        cleanup() {\r\n            if (transitionOpacity) el.style.opacity = opacityCache\r\n            if (transitionScale) el.style.transform = transformCache\r\n            if (transitionScale) el.style.transformOrigin = transformOriginCache\r\n            el.style.transitionProperty = null\r\n            el.style.transitionDuration = null\r\n            el.style.transitionTimingFunction = null\r\n        },\r\n    }\r\n\r\n    transition(el, stages)\r\n}\r\n\r\nexport function transitionClassesIn(el, directives, showCallback) {\r\n    const enter = (directives.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterStart = (directives.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterEnd = (directives.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {})\r\n}\r\n\r\nexport function transitionClassesOut(el, directives, hideCallback) {\r\n    const leave = (directives.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveStart = (directives.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveEnd = (directives.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback)\r\n}\r\n\r\nexport function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\r\n    const originalClasses = el.__x_original_classes || []\r\n\r\n    const stages = {\r\n        start() {\r\n            el.classList.add(...classesStart)\r\n        },\r\n        during() {\r\n            el.classList.add(...classesDuring)\r\n        },\r\n        show() {\r\n            hook1()\r\n        },\r\n        end() {\r\n            // Don't remove classes that were in the original class attribute.\r\n            el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)))\r\n            el.classList.add(...classesEnd)\r\n        },\r\n        hide() {\r\n            hook2()\r\n        },\r\n        cleanup() {\r\n            el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)))\r\n            el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)))\r\n        },\r\n    }\r\n\r\n    transition(el, stages)\r\n}\r\n\r\nexport function transition(el, stages) {\r\n    stages.start()\r\n    stages.during()\r\n\r\n    requestAnimationFrame(() => {\r\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\r\n\r\n        stages.show()\r\n\r\n        requestAnimationFrame(() => {\r\n            stages.end()\r\n\r\n            setTimeout(() => {\r\n                stages.hide()\r\n\r\n                // Adding an \"isConnected\" check, in case the callback\r\n                // removed the element from the DOM.\r\n                if (el.isConnected) {\r\n                    stages.cleanup()\r\n                }\r\n            }, duration);\r\n        })\r\n    });\r\n}\r\n\r\nexport function deepProxy(target, proxyHandler) {\r\n    // If target is null, return it.\r\n    if (target === null) return target;\r\n\r\n    // If target is not an object, return it.\r\n    if (typeof target !== 'object') return target;\r\n\r\n    // If target is a DOM node (like in the case of this.$el), return it.\r\n    if (target instanceof Node) return target\r\n\r\n    // If target is already an Alpine proxy, return it.\r\n    if (target['$isAlpineProxy']) return target;\r\n\r\n    // Otherwise proxy the properties recursively.\r\n    // This enables reactivity on setting nested data.\r\n    // Note that if a project is not a valid object, it won't be converted to a proxy\r\n    for (let property in target) {\r\n        target[property] = deepProxy(target[property], proxyHandler)\r\n    }\r\n\r\n    return new Proxy(target, proxyHandler)\r\n}\r\n\r\nfunction isNumeric(subject){\r\n    return ! isNaN(subject)\r\n}\r\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\r\n\r\nexport function handleForDirective(component, el, expression, initialUpdate) {\r\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\r\n\r\n    var items = component.evaluateReturnExpression(el, bunch)\r\n\r\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\r\n    var previousEl = el\r\n    items.forEach((i, index, group) => {\r\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\r\n        let currentEl = previousEl.nextElementSibling\r\n\r\n        // Let's check and see if the x-for has already generated an element last time it ran.\r\n        if (currentEl && currentEl.__x_for_key !== undefined) {\r\n            // If the the key's don't match.\r\n            if (currentEl.__x_for_key !== currentKey) {\r\n                // We'll look ahead to see if we can find it further down.\r\n                var tmpCurrentEl = currentEl\r\n                while(tmpCurrentEl) {\r\n                    // If we found it later in the DOM.\r\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\r\n                        // Move it to where it's supposed to be in the DOM.\r\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\r\n                        // And set it as the current element as if we just created it.\r\n                        currentEl = tmpCurrentEl\r\n                        break\r\n                    }\r\n\r\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\r\n                }\r\n            }\r\n\r\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\r\n            delete currentEl.__x_for_key\r\n\r\n            currentEl.__x_for_alias = single\r\n            currentEl.__x_for_value = i\r\n            component.updateElements(currentEl, () => {\r\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\r\n            })\r\n        } else {\r\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\r\n            // extra items in the array that need to be added as new elements.\r\n\r\n            // Let's create a clone from the template.\r\n            const clone = document.importNode(el.content, true);\r\n            // Insert it where we are in the DOM.\r\n            el.parentElement.insertBefore(clone, currentEl)\r\n\r\n            // Set it as the current element.\r\n            currentEl = previousEl.nextElementSibling\r\n\r\n            // And transition it in if it's not the first page load.\r\n            transitionIn(currentEl, () => {}, initialUpdate)\r\n\r\n            // Now, let's walk the new DOM node and initialize everything,\r\n            // including new nested components.\r\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\r\n            // always up to date for listener handlers that don't get re-registered.\r\n            currentEl.__x_for_alias = single\r\n            currentEl.__x_for_value = i\r\n            component.initializeElements(currentEl, () => {\r\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\r\n            })\r\n        }\r\n\r\n        currentEl.__x_for_key = currentKey\r\n\r\n        previousEl = currentEl\r\n    })\r\n\r\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\r\n    // Anything left over, we can get rid of.\r\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\r\n\r\n    while(nextElementFromOldLoop) {\r\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\r\n        const nextSibling = nextElementFromOldLoop.nextElementSibling\r\n\r\n        transitionOut(nextElementFromOldLoop, () => {\r\n            nextElementFromOldLoopImmutable.remove()\r\n        })\r\n\r\n        nextElementFromOldLoop = (nextSibling && nextSibling.__x_for_key !== undefined) ? nextSibling : false\r\n    }\r\n}\r\n\r\n// This was taken from VueJS 2.* core. Thanks Vue!\r\nfunction parseFor (expression) {\r\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\r\n    const stripParensRE = /^\\(|\\)$/g\r\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\r\n\r\n    const inMatch = expression.match(forAliasRE)\r\n    if (! inMatch) return\r\n    const res = {}\r\n    res.bunch = inMatch[2].trim()\r\n    const single = inMatch[1].trim().replace(stripParensRE, '')\r\n    const iteratorMatch = single.match(forIteratorRE)\r\n    if (iteratorMatch) {\r\n        res.single = single.replace(forIteratorRE, '').trim()\r\n        res.iterator1 = iteratorMatch[1].trim()\r\n        if (iteratorMatch[2]) {\r\n            res.iterator2 = iteratorMatch[2].trim()\r\n        }\r\n    } else {\r\n        res.single = single\r\n    }\r\n    return res\r\n  }\r\n\r\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\r\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\r\n\r\n    let keyAliases = { [single]: i }\r\n    if (iterator1) keyAliases[iterator1] = index\r\n    if (iterator2) keyAliases[iterator2] = group\r\n\r\n    return keyAttr\r\n        ? component.evaluateReturnExpression(el, keyAttr.expression, () => keyAliases)\r\n        : index\r\n}\r\n","import { arrayUnique } from '../utils'\r\n\r\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\r\n    var value = component.evaluateReturnExpression(el, expression, extraVars)\r\n\r\n    if (attrName === 'value') {\r\n        // If nested model key is undefined, set the default value to empty string.\r\n        if (value === undefined && expression.match(/\\./).length) {\r\n            value = ''\r\n        }\r\n\r\n        if (el.type === 'radio') {\r\n            el.checked = el.value == value\r\n        } else if (el.type === 'checkbox') {\r\n            if (Array.isArray(value)) {\r\n                // I'm purposely not using Array.includes here because it's\r\n                // strict, and because of Numeric/String mis-casting, I\r\n                // want the \"includes\" to be \"fuzzy\".\r\n                let valueFound = false\r\n                value.forEach(val => {\r\n                    if (val == el.value) {\r\n                        valueFound = true\r\n                    }\r\n                })\r\n\r\n                el.checked = valueFound\r\n            } else {\r\n                el.checked = !! value\r\n            }\r\n        } else if (el.tagName === 'SELECT') {\r\n            updateSelect(el, value)\r\n        } else {\r\n            el.value = value\r\n        }\r\n    } else if (attrName === 'class') {\r\n        if (Array.isArray(value)) {\r\n            const originalClasses = el.__x_original_classes || []\r\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\r\n        } else if (typeof value === 'object') {\r\n            Object.keys(value).forEach(classNames => {\r\n                if (value[classNames]) {\r\n                    classNames.split(' ').forEach(className => el.classList.add(className))\r\n                } else {\r\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\r\n                }\r\n            })\r\n        } else {\r\n            const originalClasses = el.__x_original_classes || []\r\n            const newClasses = value.split(' ')\r\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\r\n        }\r\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden', 'selected'].includes(attrName)) {\r\n        // Boolean attributes have to be explicitly added and removed, not just set.\r\n        if (!! value) {\r\n            el.setAttribute(attrName, '')\r\n        } else {\r\n            el.removeAttribute(attrName)\r\n        }\r\n    } else {\r\n        el.setAttribute(attrName, value)\r\n    }\r\n}\r\n\r\nfunction updateSelect(el, value) {\r\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\r\n\r\n    Array.from(el.options).forEach(option => {\r\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\r\n    })\r\n}\r\n","import { kebabCase } from '../utils'\r\n\r\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\r\n    if (modifiers.includes('away')) {\r\n        const handler = e => {\r\n            // Don't do anything if the click came form the element or within it.\r\n            if (el.contains(e.target)) return\r\n\r\n            // Don't do anything if this element isn't currently visible.\r\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\r\n\r\n            // Now that we are sure the element is visible, AND the click\r\n            // is from outside it, let's run the expression.\r\n            runListenerHandler(component, expression, e, extraVars)\r\n\r\n            if (modifiers.includes('once')) {\r\n                document.removeEventListener(event, handler)\r\n            }\r\n        }\r\n\r\n        // Listen for this event at the root level.\r\n        document.addEventListener(event, handler)\r\n    } else {\r\n        const listenerTarget = modifiers.includes('window')\r\n            ? window : (modifiers.includes('document') ? document : el)\r\n\r\n        const handler = e => {\r\n            if (isKeyEvent(event)) {\r\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\r\n                    return\r\n                }\r\n            }\r\n\r\n            if (modifiers.includes('prevent')) e.preventDefault()\r\n            if (modifiers.includes('stop')) e.stopPropagation()\r\n\r\n            const returnValue = runListenerHandler(component, expression, e, extraVars)\r\n\r\n            if (returnValue === false) {\r\n                e.preventDefault()\r\n            } else {\r\n                if (modifiers.includes('once')) {\r\n                    listenerTarget.removeEventListener(event, handler)\r\n                }\r\n            }\r\n        }\r\n\r\n        listenerTarget.addEventListener(event, handler)\r\n    }\r\n}\r\n\r\nfunction runListenerHandler(component, expression, e, extraVars) {\r\n    return component.evaluateCommandExpression(e.target, expression, () => {\r\n        return {...extraVars(), '$event': e}\r\n    })\r\n}\r\n\r\nfunction isKeyEvent(event) {\r\n    return ['keydown', 'keyup'].includes(event)\r\n}\r\n\r\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\r\n    let keyModifiers = modifiers.filter(i => {\r\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\r\n    })\r\n\r\n    // If no modifier is specified, we'll call it a press.\r\n    if (keyModifiers.length === 0) return false\r\n\r\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\r\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\r\n\r\n    // The user is listening for key combinations.\r\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\r\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\r\n\r\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\r\n\r\n    if (selectedSystemKeyModifiers.length > 0) {\r\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\r\n            // Alias \"cmd\" and \"super\" to \"meta\"\r\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\r\n\r\n            return e[`${modifier}Key`]\r\n        })\r\n\r\n        // If all the modifiers selected are pressed, ...\r\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\r\n            // AND the remaining key is pressed as well. It's a press.\r\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\r\n        }\r\n    }\r\n\r\n    // We'll call it NOT a valid keypress.\r\n    return true\r\n}\r\n\r\nfunction keyToModifier(key) {\r\n    switch (key) {\r\n        case '/':\r\n            return 'slash'\r\n        case ' ':\r\n        case 'Spacebar':\r\n            return 'space'\r\n        default:\r\n            return kebabCase(key)\r\n    }\r\n}\r\n","import { registerListener } from './on'\r\n\r\nexport function registerModelListener(component, el, modifiers, expression, extraVars) {\r\n    // If the element we are binding to is a select, a radio, or checkbox\r\n    // we'll listen for the change event instead of the \"input\" event.\r\n    var event = (el.tagName.toLowerCase() === 'select')\r\n        || ['checkbox', 'radio'].includes(el.type)\r\n        || modifiers.includes('lazy')\r\n        ? 'change' : 'input'\r\n\r\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`\r\n\r\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\r\n        return {\r\n            ...extraVars(),\r\n            rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression),\r\n        }\r\n    })\r\n}\r\n\r\nfunction generateModelAssignmentFunction(el, modifiers, expression) {\r\n    if (el.type === 'radio') {\r\n        // Radio buttons only work properly when they share a name attribute.\r\n        // People might assume we take care of that for them, because\r\n        // they already set a shared \"x-model\" attribute.\r\n        if (! el.hasAttribute('name')) el.setAttribute('name', expression)\r\n    }\r\n\r\n    return (event, currentValue) => {\r\n        // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\r\n        if (event instanceof CustomEvent && event.detail) {\r\n            return event.detail\r\n        } else if (el.type === 'checkbox') {\r\n            // If the data we are binding to is an array, toggle it's value inside the array.\r\n            if (Array.isArray(currentValue)) {\r\n                return event.target.checked ? currentValue.concat([event.target.value]) : currentValue.filter(i => i !== event.target.value)\r\n            } else {\r\n                return event.target.checked\r\n            }\r\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\r\n            return modifiers.includes('number')\r\n                ? Array.from(event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })\r\n                : Array.from(event.target.selectedOptions).map(option => { return option.value || option.text })\r\n        } else {\r\n            return modifiers.includes('number')\r\n                ? parseFloat(event.target.value)\r\n                : (modifiers.includes('trim') ? event.target.value.trim() : event.target.value)\r\n        }\r\n    }\r\n}\r\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce, deepProxy } from './utils'\r\nimport { handleForDirective } from './directives/for'\r\nimport { handleAttributeBindingDirective } from './directives/bind'\r\nimport { handleShowDirective } from './directives/show'\r\nimport { handleIfDirective } from './directives/if'\r\nimport { registerModelListener } from './directives/model'\r\nimport { registerListener } from './directives/on'\r\n\r\nexport default class Component {\r\n    constructor(el) {\r\n        this.$el = el\r\n\r\n        const dataAttr = this.$el.getAttribute('x-data')\r\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\r\n        const initExpression = this.$el.getAttribute('x-init')\r\n        const createdExpression = this.$el.getAttribute('x-created')\r\n        const mountedExpression = this.$el.getAttribute('x-mounted')\r\n\r\n        const unobservedData = saferEval(dataExpression, {})\r\n\r\n        /* IE11-ONLY:START */\r\n            // For IE11, add our magic properties to the original data for access.\r\n            // The Proxy pollyfill does not allow properties to be added after creation.\r\n            unobservedData.$el = null\r\n            unobservedData.$refs = null\r\n            unobservedData.$nextTick = null\r\n        /* IE11-ONLY:END */\r\n\r\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\r\n        this.$data = this.wrapDataInObservable(unobservedData)\r\n\r\n        // After making user-supplied data methods reactive, we can now add\r\n        // our magic properties to the original data for access.\r\n        unobservedData.$el = this.$el\r\n        unobservedData.$refs = this.getRefsProxy()\r\n\r\n        this.nextTickStack = []\r\n        unobservedData.$nextTick = (callback) => {\r\n            this.nextTickStack.push(callback)\r\n        }\r\n\r\n        this.showDirectiveStack = []\r\n        this.showDirectiveLastElement\r\n\r\n        var initReturnedCallback\r\n        if (initExpression) {\r\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\r\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\r\n            this.pauseReactivity = true\r\n            initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression)\r\n            this.pauseReactivity = false\r\n        }\r\n\r\n        if (createdExpression) {\r\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\r\n            this.pauseReactivity = true\r\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\r\n            this.pauseReactivity = false\r\n        }\r\n\r\n        // Register all our listeners and set all our attribute bindings.\r\n        this.initializeElements(this.$el)\r\n\r\n        // Use mutation observer to detect new elements being added within this component at run-time.\r\n        // Alpine's just so darn flexible amirite?\r\n        this.listenForNewElementsToInitialize()\r\n\r\n        if (typeof initReturnedCallback === 'function') {\r\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\r\n            // Alpine's got it's grubby little paws all over everything.\r\n            initReturnedCallback.call(this.$data)\r\n        }\r\n\r\n        if (mountedExpression) {\r\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\r\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\r\n            // Alpine's got it's grubby little paws all over everything.\r\n            saferEvalNoReturn(mountedExpression, this.$data)\r\n        }\r\n    }\r\n\r\n    wrapDataInObservable(data) {\r\n        var self = this\r\n\r\n        const proxyHandler = {\r\n            set(obj, property, value) {\r\n                // Set the value converting it to a \"Deep Proxy\" when required\r\n                // Note that if a project is not a valid object, it won't be converted to a proxy\r\n                const setWasSuccessful = Reflect.set(obj, property, deepProxy(value, proxyHandler))\r\n\r\n                // Don't react to data changes for cases like the `x-created` hook.\r\n                if (self.pauseReactivity) return setWasSuccessful\r\n\r\n                debounce(() => {\r\n                    self.updateElements(self.$el)\r\n\r\n                    // Walk through the $nextTick stack and clear it as we go.\r\n                    while (self.nextTickStack.length > 0) {\r\n                        self.nextTickStack.shift()()\r\n                    }\r\n                }, 0)()\r\n\r\n                return setWasSuccessful\r\n            },\r\n            get(target, key) {\r\n                // Provide a way to determine if this object is an Alpine proxy or not.\r\n                if (key === \"$isAlpineProxy\") return true\r\n\r\n                // Just return the flippin' value. Gawsh.\r\n                return target[key]\r\n            }\r\n        }\r\n\r\n        return deepProxy(data, proxyHandler)\r\n    }\r\n\r\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\r\n        walk(el, el => {\r\n            // We've hit a component.\r\n            if (el.hasAttribute('x-data')) {\r\n                // If it's not the current one.\r\n                if (! el.isSameNode(this.$el)) {\r\n                    // Initialize it if it's not.\r\n                    if (! el.__x) initializeComponentCallback(el)\r\n\r\n                    // Now we'll let that sub-component deal with itself.\r\n                    return false\r\n                }\r\n            }\r\n\r\n            return callback(el)\r\n        })\r\n    }\r\n\r\n    initializeElements(rootEl, extraVars = () => {}) {\r\n        this.walkAndSkipNestedComponents(rootEl, el => {\r\n            // Don't touch spawns from for loop\r\n            if (el.__x_for_key !== undefined) return false\r\n\r\n            this.initializeElement(el, extraVars)\r\n        }, el => {\r\n            el.__x = new Component(el)\r\n        })\r\n\r\n        this.executeAndClearRemainingShowDirectiveStack()\r\n\r\n        // Walk through the $nextTick stack and clear it as we go.\r\n        while (this.nextTickStack.length > 0) {\r\n            this.nextTickStack.shift()()\r\n        }\r\n    }\r\n\r\n    initializeElement(el, extraVars) {\r\n        // To support class attribute merging, we have to know what the element's\r\n        // original class attribute looked like for reference.\r\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\r\n            el.__x_original_classes = el.getAttribute('class').split(' ')\r\n        }\r\n\r\n        this.registerListeners(el, extraVars)\r\n        this.resolveBoundAttributes(el, true, extraVars)\r\n    }\r\n\r\n    updateElements(rootEl, extraVars = () => {}) {\r\n        this.walkAndSkipNestedComponents(rootEl, el => {\r\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\r\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\r\n\r\n            this.updateElement(el, extraVars)\r\n        }, el => {\r\n            el.__x = new Component(el)\r\n        })\r\n\r\n        this.executeAndClearRemainingShowDirectiveStack()\r\n\r\n        // Walk through the $nextTick stack and clear it as we go.\r\n        while (this.nextTickStack.length > 0) {\r\n            this.nextTickStack.shift()()\r\n        }\r\n    }\r\n\r\n    executeAndClearRemainingShowDirectiveStack() {\r\n        // The goal here is to start all the x-show transitions\r\n        // and build a nested promise chain so that elements\r\n        // only hide when the children are finished hiding.\r\n        this.showDirectiveStack.reverse().map(thing => {\r\n            return new Promise(resolve => {\r\n                thing(finish => {\r\n                    resolve(finish)\r\n                })\r\n            })\r\n        }).reduce((nestedPromise, promise) => {\r\n            return nestedPromise.then(() => {\r\n                return promise.then(finish => finish())\r\n            })\r\n        }, Promise.resolve(() => {}))\r\n\r\n        // We've processed the handler stack. let's clear it.\r\n        this.showDirectiveStack = []\r\n        this.showDirectiveLastElement = undefined\r\n    }\r\n\r\n    updateElement(el, extraVars) {\r\n        this.resolveBoundAttributes(el, false, extraVars)\r\n    }\r\n\r\n    registerListeners(el, extraVars) {\r\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\r\n            switch (type) {\r\n                case 'on':\r\n                    registerListener(this, el, value, modifiers, expression, extraVars)\r\n                    break;\r\n\r\n                case 'model':\r\n                    registerModelListener(this, el, modifiers, expression, extraVars)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\r\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\r\n            switch (type) {\r\n                case 'model':\r\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\r\n                    break;\r\n\r\n                case 'bind':\r\n                    // The :key binding on an x-for is special, ignore it.\r\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\r\n\r\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\r\n                    break;\r\n\r\n                case 'text':\r\n                    var output = this.evaluateReturnExpression(el, expression, extraVars);\r\n\r\n                    // If nested model key is undefined, set the default value to empty string.\r\n                    if (output === undefined && expression.match(/\\./).length) {\r\n                        output = ''\r\n                    }\r\n\r\n                    el.innerText = output\r\n                    break;\r\n\r\n                case 'html':\r\n                    el.innerHTML = this.evaluateReturnExpression(el, expression, extraVars)\r\n                    break;\r\n\r\n                case 'show':\r\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\r\n\r\n                    handleShowDirective(this, el, output, modifiers, initialUpdate)\r\n                    break;\r\n\r\n                case 'if':\r\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\r\n\r\n                    handleIfDirective(el, output, initialUpdate)\r\n                    break;\r\n\r\n                case 'for':\r\n                    handleForDirective(this, el, expression, initialUpdate)\r\n                    break;\r\n\r\n                case 'cloak':\r\n                    el.removeAttribute('x-cloak')\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\r\n        return saferEval(expression, this.$data, {\r\n            ...extraVars(),\r\n            $dispatch: this.getDispatchFunction(el),\r\n        })\r\n    }\r\n\r\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\r\n        return saferEvalNoReturn(expression, this.$data, {\r\n            ...extraVars(),\r\n            $dispatch: this.getDispatchFunction(el),\r\n        })\r\n    }\r\n\r\n    getDispatchFunction (el) {\r\n        return (event, detail = {}) => {\r\n            el.dispatchEvent(new CustomEvent(event, {\r\n                detail,\r\n                bubbles: true,\r\n            }))\r\n        }\r\n    }\r\n\r\n    listenForNewElementsToInitialize() {\r\n        const targetNode = this.$el\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                // Filter out mutations triggered from child components.\r\n                const closestParentComponent = mutations[i].target.closest('[x-data]')\r\n                if (! (closestParentComponent && closestParentComponent.isSameNode(this.$el))) return\r\n\r\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\r\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\r\n\r\n                    Object.keys(rawData).forEach(key => {\r\n                        if (this.$data[key] !== rawData[key]) {\r\n                            this.$data[key] = rawData[key]\r\n                        }\r\n                    })\r\n                }\r\n\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        if (node.matches('[x-data]')) {\r\n                            node.__x = new Component(node)\r\n                            return\r\n                        }\r\n\r\n                        this.initializeElements(node)\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions);\r\n    }\r\n\r\n    getRefsProxy() {\r\n        var self = this\r\n\r\n        var refObj = {}\r\n\r\n        /* IE11-ONLY:START */\r\n            // Add any properties up-front that might be necessary for the Proxy pollyfill.\r\n            refObj.$isRefsProxy = false;\r\n            refObj.$isAlpineProxy = false;\r\n\r\n            // If we are in IE, since the polyfill needs all properties to be defined before building the proxy,\r\n            // we just loop on the element, look for any x-ref and create a tmp property on a fake object.\r\n            this.walkAndSkipNestedComponents(self.$el, el => {\r\n                if (el.hasAttribute('x-ref')) {\r\n                    refObj[el.getAttribute('x-ref')] = true\r\n                }\r\n            })\r\n        /* IE11-ONLY:END */\r\n\r\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\r\n        // the DOM when the system needs something from it. This way, the framework is flexible and\r\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\r\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\r\n        return new Proxy(refObj, {\r\n            get(object, property) {\r\n                if (property === '$isAlpineProxy') return true\r\n\r\n                var ref\r\n\r\n                // We can't just query the DOM because it's hard to filter out refs in\r\n                // nested components.\r\n                self.walkAndSkipNestedComponents(self.$el, el => {\r\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\r\n                        ref = el\r\n                    }\r\n                })\r\n\r\n                return ref\r\n            }\r\n        })\r\n    }\r\n}\r\n","import { transitionIn, transitionOut } from '../utils'\r\n\r\nexport function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\r\n    const handle = (resolve) => {\r\n        if (! value) {\r\n            if ( el.style.display !== 'none' ) {\r\n                transitionOut(el, () => {\r\n                    resolve(() => {\r\n                        el.style.display = 'none'\r\n                    })\r\n                }, initialUpdate)\r\n            } else {\r\n                resolve(() => {})\r\n            }\r\n        } else {\r\n            if ( el.style.display !== '' ) {\r\n                transitionIn(el, () => {\r\n                    if (el.style.length === 1) {\r\n                        el.removeAttribute('style')\r\n                    } else {\r\n                        el.style.removeProperty('display')\r\n                    }\r\n                }, initialUpdate)\r\n            }\r\n\r\n            // Resolve immediately, only hold up parent `x-show`s for hidin.\r\n            resolve(() => {})\r\n        }\r\n    }\r\n\r\n    // The working of x-show is a bit complex because we need to\r\n    // wait for any child transitions to finish before hiding\r\n    // some element. Also, this has to be done recursively.\r\n\r\n    // If x-show.immediate, foregoe the waiting.\r\n    if (modifiers.includes('immediate')) {\r\n        handle(finish => finish())\r\n        return\r\n    }\r\n\r\n    // x-show is encountered during a DOM tree walk. If an element\r\n    // we encounter is NOT a child of another x-show element we\r\n    // can execute the previous x-show stack (if one exists).\r\n    if (component.showDirectiveLastElement && ! component.showDirectiveLastElement.contains(el)) {\r\n        component.executeAndClearRemainingShowDirectiveStack()\r\n    }\r\n\r\n    // We'll push the handler onto a stack to be handled later.\r\n    component.showDirectiveStack.push(handle)\r\n\r\n    component.showDirectiveLastElement = el\r\n}\r\n","import { transitionIn, transitionOut } from '../utils'\r\n\r\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\r\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#x-if`)\r\n\r\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\r\n\r\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\r\n        const clone = document.importNode(el.content, true);\r\n\r\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\r\n\r\n        el.nextElementSibling.__x_inserted_me = true\r\n\r\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\r\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\r\n        transitionOut(el.nextElementSibling, () => {\r\n            el.nextElementSibling.remove()\r\n        }, initialUpdate)\r\n    }\r\n}\r\n","import Component from './component'\r\nimport { domReady, isTesting } from './utils'\r\n\r\nconst Alpine = {\r\n    start: async function () {\r\n        if (! isTesting()) {\r\n            await domReady()\r\n        }\r\n\r\n        this.discoverComponents(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n\r\n        // It's easier and more performant to just support Turbolinks than listen\r\n        // to MutationOberserver mutations at the document level.\r\n        document.addEventListener(\"turbolinks:load\", () => {\r\n            this.discoverUninitializedComponents(el => {\r\n                this.initializeComponent(el)\r\n            })\r\n        })\r\n\r\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n    },\r\n\r\n    discoverComponents: function (callback) {\r\n        const rootEls = document.querySelectorAll('[x-data]');\r\n\r\n        rootEls.forEach(rootEl => {\r\n            callback(rootEl)\r\n        })\r\n    },\r\n\r\n    discoverUninitializedComponents: function (callback, el = null) {\r\n        const rootEls = (el || document).querySelectorAll('[x-data]');\r\n\r\n        Array.from(rootEls)\r\n            .filter(el => el.__x === undefined)\r\n            .forEach(rootEl => {\r\n                callback(rootEl)\r\n            })\r\n    },\r\n\r\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\r\n        const targetNode = document.querySelector('body');\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        // Discard non-element nodes (like line-breaks)\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        // Discard any changes happening within an existing component.\r\n                        // They will take care of themselves.\r\n                        if (node.parentElement && node.parentElement.closest('[x-data]')) return\r\n\r\n                        this.discoverUninitializedComponents((el) => {\r\n                            this.initializeComponent(el)\r\n                        }, node.parentElement)\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions)\r\n    },\r\n\r\n    initializeComponent: function (el) {\r\n        if (! el.__x) {\r\n            el.__x = new Component(el)\r\n        }\r\n    }\r\n}\r\n\r\nif (! isTesting()) {\r\n    window.Alpine = Alpine\r\n    window.Alpine.start()\r\n}\r\n\r\nexport default Alpine\r\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","show","forceSkip","attrs","showAttr","settingBothSidesOfTransition","index","indexOf","showCallback","styleValues","duration","modifierValue","origin","first","opacity","scale","second","transitionHelper","transitionHelperIn","directives","enter","find","split","enterStart","enterEnd","transitionClasses","transitionClassesIn","transitionOut","hide","hideCallback","transitionHelperOut","leave","leaveStart","leaveEnd","transitionClassesOut","key","fallback","rawValue","isNaN","join","hook1","hook2","opacityCache","style","transformCache","transform","transformOriginCache","transformOrigin","noModifiers","transitionOpacity","transitionScale","stages","start","during","transitionProperty","trim","transitionDuration","transitionTimingFunction","end","cleanup","transition","classesDuring","classesStart","classesEnd","originalClasses","__x_original_classes","classList","add","remove","requestAnimationFrame","Number","getComputedStyle","setTimeout","isConnected","deepProxy","target","proxyHandler","Node","property","Proxy","handleForDirective","component","initialUpdate","single","bunch","iterator1","iterator2","forIteratorRE","inMatch","res","iteratorMatch","parseFor","items","evaluateReturnExpression","previousEl","forEach","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","nextElementSibling","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","__x_for_alias","__x_for_value","updateElements","clone","document","importNode","content","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","handleAttributeBindingDirective","attrName","extraVars","checked","isArray","valueFound","val","tagName","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","classNames","className","newClasses","removeAttribute","registerListener","event","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","isKeyEvent","keyModifiers","keyToModifier","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","toLowerCase","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","multiple","selectedOptions","parseFloat","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","$refs","$nextTick","$data","wrapDataInObservable","getRefsProxy","nextTickStack","callback","push","showDirectiveStack","showDirectiveLastElement","pauseReactivity","console","warn","listenForNewElementsToInitialize","call","data","self","set","obj","setWasSuccessful","Reflect","func","shift","wait","context","args","arguments","later","timeout","apply","clearTimeout","get","walkAndSkipNestedComponents","initializeComponentCallback","walk","node","firstElementChild","isSameNode","__x","rootEl","initializeElement","executeAndClearRemainingShowDirectiveStack","registerListeners","resolveBoundAttributes","updateElement","reverse","thing","Promise","resolve","finish","reduce","nestedPromise","promise","then","rightSideOfExpression","registerModelListener","output","innerText","innerHTML","handle","display","removeProperty","handleShowDirective","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","handleIfDirective","$dispatch","getDispatchFunction","dispatchEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","refObj","object","ref","Alpine","async","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector"],"mappings":"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"}